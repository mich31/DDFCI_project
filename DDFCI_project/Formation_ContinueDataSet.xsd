<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Formation_ContinueDataSet" targetNamespace="http://tempuri.org/Formation_ContinueDataSet.xsd" xmlns:mstns="http://tempuri.org/Formation_ContinueDataSet.xsd" xmlns="http://tempuri.org/Formation_ContinueDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="Formation_ContinueConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="Formation_ContinueConnectionString (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.DDFCI_project.My.MySettings.GlobalReference.Default.Formation_ContinueConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="VacationTableAdapter" GeneratorDataComponentClassName="VacationTableAdapter" Name="Vacation" UserDataComponentName="VacationTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Formation_ContinueConnectionString (MySettings)" DbObjectName="[Formation Continue].dbo.Vacation" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Vacation] WHERE (([Libelle] = @Original_Libelle) AND ([Taux] = @Original_Taux))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Libelle" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Libelle" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Taux" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Taux" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Vacation] ([Libelle], [Taux]) VALUES (@Libelle, @Taux);
SELECT Libelle, Taux FROM Vacation WHERE (Libelle = @Libelle)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Libelle" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Libelle" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Taux" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Taux" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Libelle, Taux FROM dbo.Vacation</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Vacation] SET [Libelle] = @Libelle, [Taux] = @Taux WHERE (([Libelle] = @Original_Libelle) AND ([Taux] = @Original_Taux));
SELECT Libelle, Taux FROM Vacation WHERE (Libelle = @Libelle)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Libelle" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Libelle" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Taux" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Taux" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Libelle" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Libelle" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Taux" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Taux" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Libelle" DataSetColumn="Libelle" />
              <Mapping SourceColumn="Taux" DataSetColumn="Taux" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Formation_ContinueDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="Formation_ContinueDataSet" msprop:Generator_UserDSName="Formation_ContinueDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Vacation" msprop:Generator_TableClassName="VacationDataTable" msprop:Generator_TableVarName="tableVacation" msprop:Generator_TablePropName="Vacation" msprop:Generator_RowDeletingName="VacationRowDeleting" msprop:Generator_RowChangingName="VacationRowChanging" msprop:Generator_RowEvHandlerName="VacationRowChangeEventHandler" msprop:Generator_RowDeletedName="VacationRowDeleted" msprop:Generator_UserTableName="Vacation" msprop:Generator_RowChangedName="VacationRowChanged" msprop:Generator_RowEvArgName="VacationRowChangeEvent" msprop:Generator_RowClassName="VacationRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Libelle" msprop:Generator_ColumnVarNameInTable="columnLibelle" msprop:Generator_ColumnPropNameInRow="Libelle" msprop:Generator_ColumnPropNameInTable="LibelleColumn" msprop:Generator_UserColumnName="Libelle">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Taux" msprop:Generator_ColumnVarNameInTable="columnTaux" msprop:Generator_ColumnPropNameInRow="Taux" msprop:Generator_ColumnPropNameInTable="TauxColumn" msprop:Generator_UserColumnName="Taux" type="xs:double" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Vacation" />
      <xs:field xpath="mstns:Libelle" />
    </xs:unique>
  </xs:element>
</xs:schema>